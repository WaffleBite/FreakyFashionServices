// <auto-generated />
using FreakyFashionServices.Catalog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreakyFashionServices.Catalog.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210118121031_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FreakyFashionServices.Catalog.Models.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AvailableStock")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableStock = 25,
                            Description = "Must have basic t-shirt.",
                            Name = "White T-shirt",
                            Price = 200
                        },
                        new
                        {
                            Id = 2,
                            AvailableStock = 20,
                            Description = "Must have basic t-shirt.",
                            Name = "Black T-shirt",
                            Price = 200
                        },
                        new
                        {
                            Id = 3,
                            AvailableStock = 34,
                            Description = "Must have basic t-shirt.",
                            Name = "Pink T-shirt",
                            Price = 200
                        },
                        new
                        {
                            Id = 4,
                            AvailableStock = 4,
                            Description = "A casual black dress.",
                            Name = "Casual Black Dress",
                            Price = 590
                        },
                        new
                        {
                            Id = 5,
                            AvailableStock = 17,
                            Description = "A nice shirt for parties.",
                            Name = "Dotted Shirt",
                            Price = 365
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
